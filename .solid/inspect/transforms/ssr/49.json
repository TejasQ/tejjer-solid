{
  "id": "/Users/tejas/Sites/LAB/tejjer/node_modules/.pnpm/solid-start@0.2.6_i2cnpwj3ojjdnkycik5yjsstli/node_modules/solid-start/root/Scripts.tsx",
  "deps": [],
  "plugins": [
    "vite:load-fallback",
    "solid",
    "vite:define"
  ],
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useContext } from \"solid-js\";\nimport { HydrationScript, isServer, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { InlineStyles } from \"./InlineStyles\";\n\nconst isDev = import.meta.env.MODE === \"development\";\nconst isSSR = import.meta.env.START_SSR;\nconst isIslands = import.meta.env.START_ISLANDS;\n\nexport default function Scripts() {\n  const context = useContext(ServerContext);\n  return (\n    <>\n      {isSSR && <HydrationScript />}\n      {isIslands && (\n        <script>{`\n        _$HY.islandMap = {};\n        _$HY.island = (u, c) => _$HY.islandMap[u] = c;\n      `}</script>\n      )}\n      <NoHydration>\n        {isServer &&\n          (isDev ? (\n            <>\n              <script type=\"module\" src=\"/@vite/client\" $ServerOnly></script>\n              <script\n                type=\"module\"\n                async\n                src={\"/@fs/\" + import.meta.env.START_ENTRY_CLIENT}\n                $ServerOnly\n              ></script>\n            </>\n          ) : isSSR ? (\n            // @ts-ignore\n            <script type=\"module\" async src={context!.env.manifest[\"entry-client\"][0].href} />\n          ) : import.meta.env.START_INDEX_HTML ? (\n            // used in the SPA build index.html mode to create a reference to index html\n            // which will be used by the client build\n            <script type=\"module\" async src={import.meta.env.START_ENTRY_CLIENT} $ServerOnly />\n          ) : (\n            // @ts-ignore\n            <script type=\"module\" async src={context!.env.manifest[\"index.html\"][0].href} />\n          ))}\n      </NoHydration>\n      {isDev && <InlineStyles />}\n    </>\n  );\n}\n",
      "start": 1669937513967,
      "end": 1669937514028
    },
    {
      "name": "solid",
      "result": "import { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nconst _tmpl$ = [\"<script\", \">\\n        _$HY.islandMap = {};\\n        _$HY.island = (u, c) => _$HY.islandMap[u] = c;\\n      </script>\"],\n  _tmpl$2 = [\"<script\", \" type=\\\"module\\\" src=\\\"/@vite/client\\\"></script>\"],\n  _tmpl$3 = [\"<script\", \" type=\\\"module\\\" async src=\\\"\", \"\\\"></script>\"],\n  _tmpl$4 = [\"<script\", \" type=\\\"module\\\" async\", \"></script>\"];\nimport { useContext } from \"solid-js\";\nimport { HydrationScript, isServer, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { InlineStyles } from \"./InlineStyles\";\nconst isDev = import.meta.env.MODE === \"development\";\nconst isSSR = import.meta.env.START_SSR;\nconst isIslands = import.meta.env.START_ISLANDS;\nexport default function Scripts() {\n  const context = useContext(ServerContext);\n  return [isSSR && _$createComponent(HydrationScript, {}), isIslands && _$ssr(_tmpl$, _$ssrHydrationKey()), _$createComponent(NoHydration, {\n    get children() {\n      return isServer && (isDev ? [_$ssr(_tmpl$2, _$ssrHydrationKey()), _$ssr(_tmpl$3, _$ssrHydrationKey(), \"/@fs/\" + _$escape(import.meta.env.START_ENTRY_CLIENT, true))] : isSSR ? // @ts-ignore\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(context.env.manifest[\"entry-client\"][0].href, true), false)) : import.meta.env.START_INDEX_HTML ? // used in the SPA build index.html mode to create a reference to index html\n      // which will be used by the client build\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(import.meta.env.START_ENTRY_CLIENT, true), false)) : // @ts-ignore\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(context.env.manifest[\"index.html\"][0].href, true), false)));\n    }\n  }), isDev && _$createComponent(InlineStyles, {})];\n}",
      "start": 1669937514028,
      "end": 1669937514034
    },
    {
      "name": "vite:define",
      "result": "import { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nconst _tmpl$ = [\"<script\", \">\\n        _$HY.islandMap = {};\\n        _$HY.island = (u, c) => _$HY.islandMap[u] = c;\\n      </script>\"],\n  _tmpl$2 = [\"<script\", \" type=\\\"module\\\" src=\\\"/@vite/client\\\"></script>\"],\n  _tmpl$3 = [\"<script\", \" type=\\\"module\\\" async src=\\\"\", \"\\\"></script>\"],\n  _tmpl$4 = [\"<script\", \" type=\\\"module\\\" async\", \"></script>\"];\nimport { useContext } from \"solid-js\";\nimport { HydrationScript, isServer, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { InlineStyles } from \"./InlineStyles\";\nconst isDev = \"production\" === \"development\";\nconst isSSR = true;\nconst isIslands = false;\nexport default function Scripts() {\n  const context = useContext(ServerContext);\n  return [isSSR && _$createComponent(HydrationScript, {}), isIslands && _$ssr(_tmpl$, _$ssrHydrationKey()), _$createComponent(NoHydration, {\n    get children() {\n      return isServer && (isDev ? [_$ssr(_tmpl$2, _$ssrHydrationKey()), _$ssr(_tmpl$3, _$ssrHydrationKey(), \"/@fs/\" + _$escape(\"/Users/tejas/Sites/LAB/tejjer/apps/solid/src/entry-client.tsx\", true))] : isSSR ? // @ts-ignore\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(context.env.manifest[\"entry-client\"][0].href, true), false)) : false ? // used in the SPA build index.html mode to create a reference to index html\n      // which will be used by the client build\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(\"/Users/tejas/Sites/LAB/tejjer/apps/solid/src/entry-client.tsx\", true), false)) : // @ts-ignore\n      _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"src\", _$escape(context.env.manifest[\"index.html\"][0].href, true), false)));\n    }\n  }), isDev && _$createComponent(InlineStyles, {})];\n}",
      "start": 1669937514034,
      "end": 1669937514034
    }
  ],
  "virtual": false
}