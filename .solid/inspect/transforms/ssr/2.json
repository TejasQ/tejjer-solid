{
  "id": "/Users/tejas/Sites/LAB/tejjer/apps/solid/src/components/Composer.tsx",
  "deps": [],
  "plugins": [
    "vite:load-fallback",
    "solid"
  ],
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createSignal } from \"solid-js\";\n\nimport { css } from \"solid-styled-components\";\n\nimport Avatar from \"./Avatar\";\nimport Button from \"./Button\";\nexport const postTweet = async ({\n  text,\n  token,\n}: {\n  text: string;\n  token: string;\n}) => {\n  return await fetch(\"/api/tweet\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      text,\n    }),\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((r) => r.json())\n    .then(() => alert(\"Done!\"));\n};\n\nfunction Composer(props) {\n  const [tweet, setTweet] = createSignal(\"\");\n\n  return (\n    <>\n      <div>\n        <div class=\"flex items-center gap-4 p-4\">\n          <div>\n            <Avatar\n              alt={props.me.name}\n              url={props.me.profile_image_url}\n              size={64}\n            ></Avatar>\n          </div>\n          <div class=\"w-full\">\n            <textarea\n              class=\"w-full p-4 text-xl border border-gray-300 rounded dark:border-0 dark:text-white dark:bg-black\"\n              id=\"composer\"\n              placeholder=\"What's happening?\"\n              value={tweet()}\n              onChange={(event) => setTweet(event.target.value)}\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"grid p-4 grid-cols-[1fr,auto]\">\n          <ul class=\"flex items-center gap-4\">\n            <li>\n              <button onClick={(event) => alert(\"Not yet implemented!\")}>\n                üì∏\n              </button>\n            </li>\n            <li>\n              <button onClick={(event) => alert(\"Not yet implemented!\")}>\n                üìä\n              </button>\n            </li>\n            <li>\n              <button onClick={(event) => alert(\"Not yet implemented!\")}>\n                üòÑ\n              </button>\n            </li>\n            <li>\n              <button onClick={(event) => alert(\"Not yet implemented!\")}>\n                üïô\n              </button>\n            </li>\n            <li>\n              <button onClick={(event) => alert(\"Not yet implemented!\")}>\n                üìç\n              </button>\n            </li>\n          </ul>\n          <div>\n            <Button\n              condensed={true}\n              onClick={(event) => {\n                postTweet({\n                  text: tweet(),\n                  token: props.token,\n                });\n              }}\n            >\n              Tweet\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Composer;\n",
      "start": 1669937513953,
      "end": 1669937513988
    },
    {
      "name": "solid",
      "result": "import { ssr as _$ssr } from \"solid-js/web\";\nimport { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nconst _tmpl$ = [\"<div\", \"><div class=\\\"flex items-center gap-4 p-4\\\"><div>\", \"</div><div class=\\\"w-full\\\"><textarea class=\\\"w-full p-4 text-xl border border-gray-300 rounded dark:border-0 dark:text-white dark:bg-black\\\" id=\\\"composer\\\" placeholder=\\\"What's happening?\\\"\", \"></textarea></div></div><div class=\\\"grid p-4 grid-cols-[1fr,auto]\\\"><ul class=\\\"flex items-center gap-4\\\"><li><button>\\uD83D\\uDCF8</button></li><li><button>\\uD83D\\uDCCA</button></li><li><button>\\uD83D\\uDE04</button></li><li><button>\\uD83D\\uDD59</button></li><li><button>\\uD83D\\uDCCD</button></li></ul><div>\", \"</div></div></div>\"];\nimport { createSignal } from \"solid-js\";\nimport \"solid-styled-components\";\nimport Avatar from \"./Avatar\";\nimport Button from \"./Button\";\nexport const postTweet = async ({\n  text,\n  token\n}) => {\n  return await fetch(\"/api/tweet\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      text\n    }),\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(r => r.json()).then(() => alert(\"Done!\"));\n};\nfunction Composer(props) {\n  const [tweet, setTweet] = createSignal(\"\");\n  return _$ssr(_tmpl$, _$ssrHydrationKey(), _$escape(_$createComponent(Avatar, {\n    get alt() {\n      return props.me.name;\n    },\n    get url() {\n      return props.me.profile_image_url;\n    },\n    size: 64\n  })), _$ssrAttribute(\"value\", _$escape(tweet(), true), false), _$escape(_$createComponent(Button, {\n    condensed: true,\n    onClick: event => {\n      postTweet({\n        text: tweet(),\n        token: props.token\n      });\n    },\n    children: \"Tweet\"\n  })));\n}\nexport default Composer;",
      "start": 1669937513988,
      "end": 1669937513993
    }
  ],
  "virtual": false
}