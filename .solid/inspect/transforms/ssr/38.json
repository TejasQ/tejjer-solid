{
  "id": "/Users/tejas/Sites/LAB/tejjer/node_modules/.pnpm/solid-start@0.2.6_i2cnpwj3ojjdnkycik5yjsstli/node_modules/solid-start/error-boundary/ErrorBoundary.tsx",
  "deps": [],
  "plugins": [
    "vite:load-fallback",
    "solid"
  ],
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {\n  createEffect,\n  ErrorBoundary as ErrorBoundaryBase,\n  JSX,\n  ParentProps,\n  resetErrorBoundaries,\n  Show\n} from \"solid-js\";\n\nexport function ErrorBoundary(props: ParentProps<{ fallback?: (e: any, reset: () => void) => JSX.Element }>) {\n  return (\n    <ErrorBoundaryBase\n      fallback={(e, reset) => {\n        return (\n          <Show when={!props.fallback} fallback={props.fallback && props.fallback(e, reset)}>\n            <ErrorMessage error={e} />\n          </Show>\n        );\n      }}\n    >\n      {props.children}\n    </ErrorBoundaryBase>\n  );\n}\n\nexport function ErrorMessage(props: { error: any }) {\n  createEffect(() => console.error(props.error));\n\n  return (\n    <div style={{ padding: \"16px\" }}>\n      <div\n        style={{\n          \"background-color\": \"rgba(252, 165, 165)\",\n          color: \"rgb(153, 27, 27)\",\n          \"border-radius\": \"5px\",\n          overflow: \"scroll\",\n          padding: \"16px\",\n          \"margin-bottom\": \"8px\"\n        }}\n      >\n        <p style={{ \"font-weight\": \"bold\" }} id=\"error-message\">\n          {props.error.message}\n        </p>\n        <button\n          id=\"reset-errors\"\n          onClick={resetErrorBoundaries}\n          style={{\n            color: \"rgba(252, 165, 165)\",\n            \"background-color\": \"rgb(153, 27, 27)\",\n            \"border-radius\": \"5px\",\n            padding: \"4px 8px\"\n          }}\n        >\n          Clear errors and retry\n        </button>\n        <pre style={{ \"margin-top\": \"8px\", width: \"100%\" }}>{props.error.stack}</pre>\n      </div>\n    </div>\n  );\n}\n",
      "start": 1669937513954,
      "end": 1669937514019
    },
    {
      "name": "solid",
      "result": "import { ssr as _$ssr } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nconst _tmpl$ = [\"<div\", \" style=\\\"\", \"\\\"><div style=\\\"\", \"\\\"><p style=\\\"\", \"\\\" id=\\\"error-message\\\">\", \"</p><button id=\\\"reset-errors\\\" style=\\\"\", \"\\\">Clear errors and retry</button><pre style=\\\"\", \"\\\">\", \"</pre></div></div>\"];\nimport { createEffect, ErrorBoundary as ErrorBoundaryBase, resetErrorBoundaries, Show } from \"solid-js\";\nexport function ErrorBoundary(props) {\n  return _$createComponent(ErrorBoundaryBase, {\n    fallback: (e, reset) => {\n      return _$createComponent(Show, {\n        get when() {\n          return !props.fallback;\n        },\n        get fallback() {\n          return props.fallback && props.fallback(e, reset);\n        },\n        get children() {\n          return _$createComponent(ErrorMessage, {\n            error: e\n          });\n        }\n      });\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nexport function ErrorMessage(props) {\n  createEffect(() => console.error(props.error));\n  return _$ssr(_tmpl$, _$ssrHydrationKey(), \"padding:\" + \"16px\", \"background-color:\" + \"rgba(252, 165, 165)\" + (\";color:\" + \"rgb(153, 27, 27)\") + (\";border-radius:\" + \"5px\") + (\";overflow:\" + \"scroll\") + (\";padding:\" + \"16px\") + (\";margin-bottom:\" + \"8px\"), \"font-weight:\" + \"bold\", _$escape(props.error.message), \"color:\" + \"rgba(252, 165, 165)\" + (\";background-color:\" + \"rgb(153, 27, 27)\") + (\";border-radius:\" + \"5px\") + (\";padding:\" + \"4px 8px\"), \"margin-top:\" + \"8px\" + (\";width:\" + \"100%\"), _$escape(props.error.stack));\n}",
      "start": 1669937514019,
      "end": 1669937514022
    }
  ],
  "virtual": false
}