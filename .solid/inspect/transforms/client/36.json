{
  "id": "/Users/tejas/Sites/LAB/tejjer/node_modules/.pnpm/solid-start@0.2.6_i2cnpwj3ojjdnkycik5yjsstli/node_modules/solid-start/error-boundary/ErrorBoundary.tsx",
  "deps": [],
  "plugins": [
    "vite:load-fallback",
    "solid"
  ],
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {\n  createEffect,\n  ErrorBoundary as ErrorBoundaryBase,\n  JSX,\n  ParentProps,\n  resetErrorBoundaries,\n  Show\n} from \"solid-js\";\n\nexport function ErrorBoundary(props: ParentProps<{ fallback?: (e: any, reset: () => void) => JSX.Element }>) {\n  return (\n    <ErrorBoundaryBase\n      fallback={(e, reset) => {\n        return (\n          <Show when={!props.fallback} fallback={props.fallback && props.fallback(e, reset)}>\n            <ErrorMessage error={e} />\n          </Show>\n        );\n      }}\n    >\n      {props.children}\n    </ErrorBoundaryBase>\n  );\n}\n\nexport function ErrorMessage(props: { error: any }) {\n  createEffect(() => console.error(props.error));\n\n  return (\n    <div style={{ padding: \"16px\" }}>\n      <div\n        style={{\n          \"background-color\": \"rgba(252, 165, 165)\",\n          color: \"rgb(153, 27, 27)\",\n          \"border-radius\": \"5px\",\n          overflow: \"scroll\",\n          padding: \"16px\",\n          \"margin-bottom\": \"8px\"\n        }}\n      >\n        <p style={{ \"font-weight\": \"bold\" }} id=\"error-message\">\n          {props.error.message}\n        </p>\n        <button\n          id=\"reset-errors\"\n          onClick={resetErrorBoundaries}\n          style={{\n            color: \"rgba(252, 165, 165)\",\n            \"background-color\": \"rgb(153, 27, 27)\",\n            \"border-radius\": \"5px\",\n            padding: \"4px 8px\"\n          }}\n        >\n          Clear errors and retry\n        </button>\n        <pre style={{ \"margin-top\": \"8px\", width: \"100%\" }}>{props.error.stack}</pre>\n      </div>\n    </div>\n  );\n}\n",
      "start": 1669937513063,
      "end": 1669937513117
    },
    {
      "name": "solid",
      "result": "import { template as _$template } from \"solid-js/web\";\nimport { delegateEvents as _$delegateEvents } from \"solid-js/web\";\nimport { getNextElement as _$getNextElement } from \"solid-js/web\";\nimport { runHydrationEvents as _$runHydrationEvents } from \"solid-js/web\";\nimport { addEventListener as _$addEventListener } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { memo as _$memo } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<div><div><p id=\"error-message\"></p><button id=\"reset-errors\">Clear errors and retry</button><pre></pre></div></div>`, 10);\nimport { createEffect, ErrorBoundary as ErrorBoundaryBase, resetErrorBoundaries, Show } from \"solid-js\";\nexport function ErrorBoundary(props) {\n  return _$createComponent(ErrorBoundaryBase, {\n    fallback: (e, reset) => {\n      return _$createComponent(Show, {\n        get when() {\n          return !props.fallback;\n        },\n        get fallback() {\n          return _$memo(() => !!props.fallback)() && props.fallback(e, reset);\n        },\n        get children() {\n          return _$createComponent(ErrorMessage, {\n            error: e\n          });\n        }\n      });\n    },\n    get children() {\n      return props.children;\n    }\n  });\n}\nexport function ErrorMessage(props) {\n  createEffect(() => console.error(props.error));\n  return (() => {\n    const _el$ = _$getNextElement(_tmpl$),\n      _el$2 = _el$.firstChild,\n      _el$3 = _el$2.firstChild,\n      _el$4 = _el$3.nextSibling,\n      _el$5 = _el$4.nextSibling;\n    _el$.style.setProperty(\"padding\", \"16px\");\n    _el$2.style.setProperty(\"background-color\", \"rgba(252, 165, 165)\");\n    _el$2.style.setProperty(\"color\", \"rgb(153, 27, 27)\");\n    _el$2.style.setProperty(\"border-radius\", \"5px\");\n    _el$2.style.setProperty(\"overflow\", \"scroll\");\n    _el$2.style.setProperty(\"padding\", \"16px\");\n    _el$2.style.setProperty(\"margin-bottom\", \"8px\");\n    _el$3.style.setProperty(\"font-weight\", \"bold\");\n    _$insert(_el$3, () => props.error.message);\n    _$addEventListener(_el$4, \"click\", resetErrorBoundaries, true);\n    _el$4.style.setProperty(\"color\", \"rgba(252, 165, 165)\");\n    _el$4.style.setProperty(\"background-color\", \"rgb(153, 27, 27)\");\n    _el$4.style.setProperty(\"border-radius\", \"5px\");\n    _el$4.style.setProperty(\"padding\", \"4px 8px\");\n    _el$5.style.setProperty(\"margin-top\", \"8px\");\n    _el$5.style.setProperty(\"width\", \"100%\");\n    _$insert(_el$5, () => props.error.stack);\n    _$runHydrationEvents();\n    return _el$;\n  })();\n}\n_$delegateEvents([\"click\"]);",
      "start": 1669937513117,
      "end": 1669937513125
    }
  ],
  "virtual": false
}