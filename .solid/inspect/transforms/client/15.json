{
  "id": "/Users/tejas/Sites/LAB/tejjer/apps/solid/src/routes/index.tsx?data",
  "deps": [],
  "plugins": [
    "vite:load-fallback",
    "solid"
  ],
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { parse } from \"cookie\";\nimport { A, RouteDataFunc, useRouteData } from \"solid-start\";\nimport { createServerData$ } from \"solid-start/server\";\nimport LoginPage from \"~/components/LoginPage\";\nimport WholeUI from \"~/components/WholeUI\";\n\nexport default function Home() {\n  const read = useRouteData<typeof routeData>();\n  const data = read();\n\n  if (!data?.authenticated) {\n    return <LoginPage />;\n  }\n\n  return <WholeUI me={data.me} timeline={data.timeline} token={data.token} />;\n}\n\nexport const routeData: RouteDataFunc = () => {\n  return createServerData$(\n    async (_, { request }) => {\n      const cookie = request.headers.get(\"Cookie\") as string;\n\n      if (!cookie) {\n        return { authenticated: false };\n      }\n\n      const token = JSON.parse(decodeURIComponent(parse(cookie).token) || \"{}\");\n\n      if (!token) {\n        return { authenticated: false };\n      }\n\n      const twitterRequestOptions = {\n        headers: {\n          Authorization: `Bearer ${token.value}`,\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      const me = await fetch(\n        \"https://api.twitter.com/2/users/me?user.fields=profile_image_url\",\n        twitterRequestOptions\n      )\n        .then((r) => r.json())\n        .then((r) => r.data);\n\n      console.log({ me });\n\n      if (!me) {\n        return { authenticated: false };\n      }\n\n      const timeline = await fetch(\n        `https://api.twitter.com/2/users/${me.id}/timelines/reverse_chronological?tweet.fields=created_at&expansions=author_id&user.fields=profile_image_url,id,username&max_results=100`,\n        twitterRequestOptions\n      )\n        .then((r) => r.json())\n        .then((r) =>\n          r.data.map((tweet: any) => ({\n            ...tweet,\n            author: r.includes.users.find(\n              (user: any) => user.id === tweet.author_id\n            ),\n          }))\n        );\n\n      return {\n        authenticated: true,\n        token: token.value,\n        expiresAt: token.expiresAt,\n        me,\n        timeline,\n      };\n    },\n    { key: \"hi\" }\n  );\n};\n",
      "start": 1669937512951,
      "end": 1669937512998
    },
    {
      "name": "solid",
      "result": "import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { createRouteData } from \"solid-start/data\";\nimport server$ from \"solid-start/server\";\nimport { useRouteData } from \"solid-start\";\nimport LoginPage from \"~/components/LoginPage\";\nimport WholeUI from \"~/components/WholeUI\";\nexport default function Home() {\n  const read = useRouteData();\n  const data = read();\n  if (!data?.authenticated) {\n    return _$createComponent(LoginPage, {});\n  }\n  return _$createComponent(WholeUI, {\n    get me() {\n      return data.me;\n    },\n    get timeline() {\n      return data.timeline;\n    },\n    get token() {\n      return data.token;\n    }\n  });\n}\nconst $$server_module0 = server$.createFetcher(\"/_m/0dbe216f23/routeData\");\nexport const routeData = () => {\n  return createRouteData($$server_module0, {\n    key: \"hi\"\n  });\n};",
      "start": 1669937513000,
      "end": 1669937513016
    }
  ],
  "virtual": false
}